var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
///<amd-module name="sabre-ngv-hints/Context" />
/// <ngv scope="public" />
define("sabre-ngv-hints/Context", ["require", "exports", "sabre-ngv-core/modules/ModuleContext"], function (require, exports, ModuleContext_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    // Cannot use IModuleContext['something'] for types - it seems to break generics
    // types are copied from IModuleContext
    /** @internal **/
    exports.context = new ModuleContext_1.ModuleContext("sabre-ngv-hints");
    /** @internal **/
    exports.cf = exports.context.cf.bind(exports.context);
    /** @internal **/
    exports.registerService = exports.context.registerService.bind(exports.context);
    /** @internal **/
    exports.getService = exports.context.getService.bind(exports.context);
});
///<amd-module name="sabre-ngv-hints/IHintXPConfig" />
/// <ngv scope="public" />
define("sabre-ngv-hints/IHintXPConfig", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
});
///<amd-module name="sabre-ngv-hints/HintXPConfig" />
/// <ngv scope="public" />
define("sabre-ngv-hints/HintXPConfig", ["require", "exports", "sabre-ngv-xp/configs/XPConfig"], function (require, exports, XPConfig_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var HintXPConfig = (function (_super) {
        __extends(HintXPConfig, _super);
        /**
         * Constructor.
         *
         * @example new hintXPConfig(securityHintAction)
         *
         * @param execute - function returning hint config properties from given Hint class
         */
        function HintXPConfig(execute, prio) {
            if (prio === void 0) { prio = 0; }
            var _this = _super.call(this, 'button', prio) || this;
            _this.execute = execute;
            _this.prio = prio;
            return _this;
        }
        return HintXPConfig;
    }(XPConfig_1.XPConfig));
    exports.HintXPConfig = HintXPConfig;
});
define("sabre-ngv-hints/Main", ["require", "exports", "sabre-ngv-core/modules/Module"], function (require, exports, Module_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Main = (function (_super) {
        __extends(Main, _super);
        function Main() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return Main;
    }(Module_1.Module));
    exports.Main = Main;
});
///<amd-module name="sabre-ngv-hints" />
define("sabre-ngv-hints", ["require", "exports", "sabre-ngv-hints/Main", "sabre-ngv-hints/Context"], function (require, exports, Main_1, Context_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Module_sabre_ngv_hints = (function (_super) {
        __extends(Module_sabre_ngv_hints, _super);
        function Module_sabre_ngv_hints(manifest) {
            var _this = _super.call(this, manifest) || this;
            Context_1.context.setModule(_this);
            return _this;
        }
        return Module_sabre_ngv_hints;
    }(Main_1.Main));
    exports.default = Module_sabre_ngv_hints;
});

//# sourceMappingURL=module.js.map
